=============================================================================
Класс KBFILE
=============================================================================

Объекты класса KBFILE создаются для каждого открытого файла базы
знаний. Он содержит информацию из заголовка, индексы и др. Функции
доступа к атрибутам и значениям разбиты на две группы:
отсортированные и неотсортированные. Функции доступа и
манипулирования атрибутами, значениями, правилами и др. используют
явные указатели или номер элемента. Для синтаксической части это
номера (либо отсортированные либо нет), а для семантической -- это
указатели на утверждение (конъюнкт или дизъюнкт).

Функции манипулирования объектом
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
■ OpenKBfile

Конструктор. Это статическая функция, которая используется для
создания объекта (открытия файла). В действительности, объект может
не создававться если этот файл уже открыт. Она инициализирут объект и
корректирует список открытых файлов. Возвращает указатель на объект.

■ CloseKBFile

Деструктор. Функция для закрытия файла.

■ SaveKBFile

Сбрасывает содержимое объекта на диск. Объект должен быть не новым.

■ RenameKBFile

Дать новое имя файлу для данного объекта. Если объект с таким именем
файла (вернее, с таким же путем) уже существует в списке, то
необходимо все окна того файла перекинуть на данный объект, а всем
окнам данного объекта передать сообщение об изменении имени, чтобы
они могли изменить свое название. Фактически, содержимое того файла
теряется после сохранения. В среде в случае совпадения нового имени с
каким-либо существующим файлом (не обязательно открытым или базой
знаний -- любым файлом на диске с тем же полным именем) должно
запрашиваться подтверждение на запись сверху него (overwrite?).
Окна, открытые для нового имени файла сбрасываются, т.е., они
становятся как бы заново открытыми. В частности, теряются данные
и заключения. После переименования объект становится измененным,
однако обычно сразу же после этого он сохраняется.

■ ResetCNF
■ ResetDNF

Сбросить КНФ и ДНФ в начальное состояние. После этого необходимо заново
проводить компиляцию.

■ IsKBFileNamed

Является ли объект новым, т.е., соответствует ли ему реальный файл на
диске или этот объект находится только в памяти.

■ IsKBFileSaved

Сохранялось ли содержимое объекта в файле базы знаний или нет.

Функции сортировки
~~~~~~~~~~~~~~~~~~

■ SortAttributes
■ SortAllValues
■ SortValues

Вызываются при инициализации, а также при изменениии параметров
атрибутов и значений.

■ AttI2N

Преобразовать относительный номер атрибута с заданной сортировкой и
направлением в абсолютный номер. Сортировка "как в правиле"
эквивалентна отсутствию сортировки.

■ AttN2I

Преобразовать абсолютный номер атрибута в номер относительно заданной
сортировки и направления. Сортировка "как в правиле" эквивалентна
отсутствию сортировки.

■ ValI2N

Преобразовать относительный номер значения с заданной сортировкой и
направлением в абсолютный номер. Передаваемый номер атрибута
является абсолютным. Сортировка "как в правиле" для значений запрещена.

■ ValN2I

Преобразовать абсолютный номер значения с абсолютно заданным
атрибутом в номер значения относительно заданной сортировки и
направления.  Сортировка "как в правиле" для значений запрещена.

■ Prop2Att

Указывается сортировка и направление, причем можно использовать
сортировку "как в правиле", а также передается ссылка на правило.
Упорядоченный номер высказывания этого правила преобразуется в также
упорядоченный номер атрибута этого высказывания. Можно представить,
что все атрибуты упорядочены (кроме сортировки "как в правиле") и
среди них выделены те, которые входят в правило. Последние имеют как
сквозные номера (в соответствии с общим списком), так и относительные
(когда рассматриваются только входящие в правило). Причем и те и
другие номера монотонны, т.е., если один номер увеличился, то и
другой тоже.  Эта функция преобразует относительный номер
высказывания в сквозной номер атрибута. Если указана сортировка "как
в правиле", то сортировка общего списка не имеет значения, а
используется порядок расположения высказываний в правиле. При этом
возвращаемый номер атрибута является абсолютным, т.е., соответствует
отсутствию сортировки. В этом случае возрастание номера высказывания
может приводить к произвольному изменению номера атрибута.

■ Att2Prop

Указывается сортировка и направление, причем можно использовать
сортировку "как в правиле", а также передается ссылка на правило.
Упорядоченный номер атрибута некоторого высказывания правила
преобразуется в также упорядоченный номер высказывания. Можно
представить, что все атрибуты упорядочены (кроме сортировки "как в
правиле") и среди них выделены те, которые входят в правило.
Последние имеют как сквозные номера (в соответствии с общим списком),
так и относительные (когда рассматриваются только входящие в
правило). Эта функция преобразует сквозной номер атрибута в
относительный номер высказывания. Если указана сортировка "как в
правиле", то сортировка общего списка не имеет значения, а
используется порядок расположения высказываний в правиле. Если
указанного атрибута нет в правиле, то возвращается ошибка.

Групповые функции (списочные)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

■ firstThat
■ lastThat

Функция, которая возвращает указатель на тот объект в упорядоченном
списке, который удовлетворяет условию. Само условие передается в
качестве параметра в виде указателя на функцию, возвращающую
логическое значение. Возвращается соответственно перый и последний
элементы (открытые файлы), удовлетворяющие условию. Если необходимо
получить доступ ко всем элементам, то необходимо использовать функцию
forEach.

■ forEach

Для каждого объекта из списка вызывается функция, указатель на
которую передается в качестве параметра.

■ forEachKBase

Вызов функции, указатель на которую передается в качестве параметра
для каждого открытого окна, т.е., для каждого объекта KBASE.

■ forEachWindow

Рассылка указанного сообщения всем открытым окнам данного файла.

■ NumberOfSuch (KBFilesNumber?)

Количество открытых файлов, т.е., общее количество существующих в
настоящее время объектов в списке.

■ (KBaseNumber)

Количество открытых окон для данного объекта, т.е., количество
объектов класса KBASE находящихся в списке данного объекта.

Функции манипулирования и доступа к атрибутам
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

■ GetAttribute

Получить описание атрибута. В качестве параметра передается
абсолютный номер атрибута. Возвращается указатель на запись об атрибуте.

■ PutAttribute

Положить атрибут на другой. В качестве параметра передается ссылка
на описание атрибута и абсолютный номер атрибута на который надо
положить. Общее количество атрибутов не меняется. Может поменяться
сортировка и всем окнам передаться соответствующее сообщение.
Возвращается номер атрибута.

■ InsAttribute

Вставить атрибут перед другим. В качестве параметра передается ссылка
на описание атрибута и абсолютный номер атрибута перед которым надо
вставить. Общее количество атрибутов увеличивается на 1. Если атрибут
с таким именем уже существует, то возвращается ошибка. Меняется сортировка
и всем окнам передается соответствующее сообщение. Возвращается номер
атрибута.

■ DelAttribute

Удалить атрибут с данным абсолютным номером. Общее количество
атрибутов уменьшается на 1. Всем окнам передается соответствующее
сообщение. Возвращается номер удаленного атрибута (точнее, номер
атрибута, который оказался на месте удаленного).

■ AttNumber

Общее количество атрибутов.


Функции манипулирования и доступа к значениям
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

■ GetValue

Получить описание значения. В качестве параметра передается
абсолютный номера атрибута и значенимя. Возвращается указатель на
запись о значении.

■ PutValue

Положить значение на другое. В качестве параметра передается
ссылка на описание значения и абсолютный номер атрибута и значения
на который надо положить. Общее количество значений и количество
значений данного атрибута не меняется.  Если значение с таким
именем уже существует, то возвращается ошибка. Меняется сортировка и
всем окнам передается соответствующее сообщение. Возвращается
номер значения.

■ InsValue

Вставить значение перед другим. В качестве параметра передается
ссылка на описание значения и абсолютный номер атрибута и значения
перед которым надо вставить. Общее количество значений и количество
значений данного атрибута увеличиваются на 1.  Если значение с таким
именем уже существует, то возвращается ошибка. Меняется сортировка и
всем окнам передается соответствующее сообщение. Возвращается
номер значения.

■ DelValue

Удалить значение с данным абсолютным номером атрибута и значения.
Общее количество значений и количество значений данного атрибута
уменьшается на 1. Всем окнам передается соответствующее сообщение.
Возвращается номер значения (точнее, номер того значения, которое
оказалось на месте удаленного).

■ ValNumber

Общее количество значений для данного атрибута. Номер атрибута
абсолютный.

■ ValSum

Функция для определения суммы значений признаков. Есть три версии:
отсортированная, неотсортированная и с неполным списком. Абсолютныя
версия эквивалентна отсутствию сортировки с полным списком (просто она
более быстрая). Фактически, она возвращает смещение до начала
списка значений атрибута. Во второй версии считается, что список
полный, а в третьей, что список ограничен атрибутами, входящими в
правило.


Функции манипулирования и доступа к правилам (семантические)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

■ RuleNumber

Количество правил в базе знаний.

■ GetRuleHead

Функция возвращает указатель на заголовок правила, номер которого
передается в качестве параметра.

■ InsRule

Вставить пустое правило перед данным, указатель на которое передается в
качестве параметра. Общее количество правил увеличивается на 1.
Кроме того, увеличивается общая длина.
Корректность указателя на правило не проверяется.

■ DelRule

Удалить данное правило, указатель на которое передается в качестве
параметра. Общее количество правил уменьшается на 1, а также
уменьшается общая длина правил. Корректность указателя на правило
не проверяется.

■ InsAttInKBase
■ InsAttInCNF
■ InsAttInDNF
■ InsAttInRule

Скомпенсировать добавление атрибута для всей базы знаний, КНФ и ДНФ,
а также для одного указанного правила. Компенсация заключается в том,
что все высказывания в правилах, которые имеют номер атрибута больше
либо равный указанному должны увеличить свой номер на 1.

■ DelAttInKBase
■ DelAttInRule

Скомпенсировать удаление атрибута для всей базы знаний, а также
для одного указанного правила. Компенсация заключается в том, что
все высказывания в правилах, которые имеют номер атрибута больше
либо равный указанному должны увеличить свой номер на 1.

■ InsValInKBase
■ InsValInDNF
■ InsValInCNF
■ InsValInRule

Скомпенсировать добавление значения для всей базы знаний, КНФ, ДНФ,
а также для одного указанного правила. В результате в каждое
указанное высказывание правила добавляется одна компонента и
инициализируется тривиальным значением.

■ DelValInKBase
■ DelValInRule

Скомпенсировать удаление значения для всей базы знаний,
а также для одного указанного правила. В результате из каждого
указанного высказывания правила удаляется одна компонента.

■ PropNumber

Количество высказываний в правиле. В качестве параметра передается
указатель на правило.

■ GetPropHead

Функция возвращает ссылку на заголовок высказывания. В качестве
параметра передается ссылка на правило и абсолютный номер атрибута,
высказывание о котором необходимо найти. Если такого высказывания
нет в правиле, а также если номер атриубта равен -1 то возвращается
ноль. Если номер атрибута равен их количеству, то возвращается ссылка
на самый конец правила (заголовок следующего). Если необходимо найти
высказывание (получить ссылку на его заголовок) имея номер самого
высказывания, то можно воспользоваться функцией Prop2Att. При этом,
если указать сортировку "как в правиле" то будет просто найдено
высказывание, которое в правиле стоит на указанном месте.

■ AbsAtt2Prop
■ AbsProp2Att

Преобразовать абсолютный номер атрибута в номер высказывания в правиле.
Номер высказывания означает его место попорядку в правиле.

■ InsPropInRule (? не используется и опасна)
■ InsProp

Вставить высказывание об атрибуте в правило. В качестве параметра
передаются указатель на правило, номер высказывание перед которым
необходимо вставить новое и номер самого атрибута. Увеличивается
количество высказываний в правиле, длина текущего правила и общая
длина правил. Номера атрибутов являются абсолютными. Если вставляемый
атрибут уже есть в правиле либо отсутствует тот перед которым
необходимо вставить, то возвращается ошибка.

Функция InsPropInRule аналогична за исключением того, что она считает, что
данное правило единственно (т.е., это функция на правиле, а не на
базе знаний). О существовании других правил она ничего не знает.

■ DelPropInRule (? не используется и опасна)
■ DelProp
■ DelPropInKBase

Удалить высказывание об атрибуте из правила. В качестве параметров
передаются ссылка на правило и абсолютный номер удаляемого атрибута.
Уменьшается общее количество высказываний в правиле, длина правила и
длина всех правил. Соответствующим окнам передается сообщение.
Возвращается номер атрибута, который оказался на месте удаленного.
Если было удалено последнее высказывание, то возвращается количество
атрибутов.

Функция DelPropInRule аналогична за исключением того, что она считает, что
данное правило единственно (т.е., это функция на правиле, а не на
базе знаний). О существовании других правил она ничего не знает.

Функция DelPropInKBase удаляет высказывание о данном атрибуте из всех
правил базы знаний

■ InvertProp

Отрицание высказывания. В результате меняются компоненты высказывания
и его модальность. Номер атрибута является абсолютным. Если указанного
атрибута нет в правиле, то возвращается ошибка. Соответствующим окнам
передается сообщение. Возвращается номер инвертированного атрибута.

■ GetComp
■ GetComp

Функция возвращает ссылку на компоненту. В качестве параметра
передается указатель на высказывание и абсолютный номер компоненты
(значения) либо указатель на правило вместе с номерами атрибута
и значения. Корректность указателей не проверяется.

Функции логического вывода
~~~~~~~~~~~~~~~~~~~~~~~~~~

■ CompileToDNF
■ CompileToCNF

Функции комиляции базы знаний. В процессе компиляции (на каждом шаге)
вызывается процедура отчета, указатель на которую передается как
параметр. Во время компиляции никаких действий в объектом производить
нельзя (разрешены только процедуры чтения, не меняющие состояние).
Можно указать также начальный проход и конечный.

■ InferenceOnDNF
■ InferenceOnCNF

Функция логического вывода. В качестве параметров она получает ссылки
на данные и заключения, а также процедуру отчета.

■ ResetDNF
■ ResetCNF

Сброс ДНФ и КНФ в начальное состояние. После этого проведение
логического вывода невозможно.

■ Constant

Нахождение константы дизъюнкта и конъюнкта. В качестве параметра
передается ссылка на конъюнкт или дизъюнкт. Найденная константа
записывется в соответствующее поле заголовка.

■ Reduce

Привести конъюнкт или дизъюнкт, ссылка на который передается в
качестве параметра. Может уменьшиться количество высказываний (вплоть
до нуля). Константа должна быть правильно установлена.  Перед
приведением желательно проверять значение константы на
противоречивость (но можно этого и не делать). Обычно вызывается
после функции Constant.

■ Expand (Extend?)

Приведение к максимальной форме утрвеждения, ссылка на которое
передается в качестве параметра. Количество высказываний либо не
меняется (если утверждение нормально), либо становится равным
количеству атрибутов (если утверждение ненормально), т.е., в
утверждение включаются все высказывания. Константа должна быть
правильно установлена.

■ Absorb

Функция проверки следования одного утверждения из другого. Ссылки на
них передаются в качестве параметров. Если отношение следования
выполняется, то возвращается истина и, значит, второе утверждение
может быть вычеркнуто. В противном случае возвращается ложь.
Отношение следования проверяется только в одну сторону.

■ Resolvate

Резольвирование двух дизъюнктов с получением третьего.

■ Dis2Con
■ Con2Dis

Преобразовать утверждение одного типа в несколько утвержедний другого
типа без изменения семантики.

■ DisIntoCon
■ ConIntoDis

Включить утверждение одного типа в утверждение другого типа.




=============================================================================
Внеклассовые функции
=============================================================================

■ LK_malloc
■ LK_realloc
■ LK_free

■ InsDelMem

Перемещение куска памяти для выделения в нем дырки либо для
схлопывания пустого места.

■ MemorySize

Определяет размер памяти по указателю на нее.

■ ReadFile
■ WriteFile

■ IsFileValid

Есть два варианта этой функции. Один в качестве параметра принимает
строку имени файла, а другой -- ключ уже открытого файла. Возвращает
код ошибки, например, неправильная версия.

■ GetNameFromPath

Функция возвращает указатель на начало (первый символ в) имени файла
в строке, которая передается с помощью указателя и представляет
полный путь файла.



=============================================================================
Опции
=============================================================================

[x] Show All Conclusions

Обычный режим. В вектор выводов вставляются все нетривиальные
высказывания (за вычетом данных). Если режим выключен, то в процессе
вывода в заключение переносятся только те высказывания (возможно даже
тривиальные), которые уже присутствуют в векторе выводов (специально
вставлены пользователем как целевые).  Опция влияет только на то,
какие высказывания переносятся в заключение после проведения
логического вывода. В любом случае высказывания в заключение можно
как удалять так и вставлять и даже редактировать (последнее в диалоге
запрещено, т.к., не имеет смысла).

[x] Reset Selection When Change View

Нормальный режим. При смене вида номера текущих атрибута и значения
сбрасываются (в 0 или -1 в зависимости от использования -1).  Если
режим выключен, то текущие номера по возможности сохраняются.  Если
они не могут быть сохранены (по причине отсутствия соответствующего
высказывания), то устанавливается ближайший больший номер в
соответствии с текущей сортировкой.

[x] Reset Value When Change Attribute

При изменении номера атрибута текущее значение сбрасывается (в 0 или
-1 в зависимости от использования -1). Если режим выключен, то
текущее значение по возможности сохраняется. Если же новый атрибут
имеет меньше значений, чем нужно, то новое значение устанавливается
максимальным.

[x] Use No Selection

Использование номеров атрибутов и значений равных -1, что означает
отсутствие текущего атрибута или значения. Если режим выключен, то
номера -1 недопустимы (хотя к ошибкам это не приводит).  Опция
сказывается только при смене (переходе к предыдущему) атрибута и
значения, а также при сбросе в начальное состояние.

[x] Remove Data From Conclusions

После получения всех выводов из них вычитаются данные,
т.е., устраняется избыточность выводов. Однако, при этом может
теряться некоторая информация, например, если некоторый
введенный факт следует из других фактов. Если опция выключена,
то выводы остаются без изменения.

[x] OEM

Использовать OEM кодировку при сохранении и открытии файлов.


