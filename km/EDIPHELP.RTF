{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman MS Serif;}{\f1\froman Symbol;}{\f2\fswiss MS Sans Serif;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0;\red127\green0\blue127;\red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;
\red192\green192\blue192;}{\stylesheet{\s244\sb120 \f2\fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245\sb120 \f2\fs20\lang1033 \sbasedon0\snext245 footnote text;}{\s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 
\sbasedon0\snext0 heading 1;}{\sb120 \f2\fs20\lang1033 \snext0 Normal;}}{\info{\title EDIP help file}{\author A.A. Savinov}{\operator Savinov}{\creatim\yr1994\mo4\dy15\hr12\min25}{\revtim\yr1994\mo5\dy6\hr15\min13}{\version163}{\edmins510}{\nofpages0}
{\nofwords0}{\nofchars0}{\vern16504}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj {\*\template C:\\WINWORD\\EDIPHELP.DOT}\sectd \linex0\endnhere \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 
\b\f2\fs36\cf2\lang1033 {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} main_index }} Knowledge Manager EDIP Help Contents 
\par \pard\plain \sb120 \f2\fs20\lang1033 {\b\uldb\cf11 Window Classes}{\v\cf5 window_classes} 
\par \tab {\b\uldb\cf11 Structure Window}{\v\cf5 structure_window} 
\par \tab {\b\uldb\cf11 Knowledge Window}{\v\cf5 kno}{\v\cf5 wledge_window} 
\par \tab {\b\uldb\cf11 Consultation Window}{\v\cf5 consultation_window} 
\par {\b\uldb\cf11 Menu Commands}{\v\cf5 menu_commands} 
\par \tab {\b\uldb\cf11 File}{\v\cf5 file_menu} 
\par \tab {\b\uldb\cf11 View}{\v\cf5 view_menu} 
\par \tab {\b\uldb\cf11 Item}{\v\cf5 item_menu} 
\par \tab {\b\uldb\cf11 Compile}{\v\cf5 compile_menu} 
\par \tab {\b\uldb\cf11 Inference}{\v\cf5 inference_menu} 
\par \tab {\b\uldb\cf11 Window}{\v\cf5 window_menu} 
\par \tab {\b\uldb\cf11 Help}{\v\cf5 help_menu}
\par {\b\uldb\cf11 Attribute Model}{\v\cf5 attribute_model} 
\par {\b\uldb\cf11 Fuzzy Propositions}{\v\cf5 fuzzy_propositions} 
\par {\b\uldb\cf11 Fuzzy Disjuncts}{\v\cf5 fuzzy_disjuncts} 
\par {\b\uldb\cf11 Fuzzy Implications}{\v\cf5 fuzzy_implications} 
\par {\b\uldb\cf11 Fuzzy Conjuncts}{\v\cf5 fuzzy_conjuncts} 
\par {\b\uldb\cf11 Logical Inference}{\v\cf5 logical_inference} 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} window_classes }} Window Classes 
\par \pard\plain \sb120 \f2\fs20\lang1033 Knowledge manager EDIP allows opening three classes of windows: 
\par \pard \fi-360\li720\sb120 {\field{\*\fldinst SYMBOL 183 \\f "Symbol" \\s 10 \\h}{\fldrslt }}\tab {\b\uldb\cf11 structure window}{\v\cf5 structure_window} 
\par {\field\flddirty{\*\fldinst SYMBOL 183 \\f "Symbol" \\s 10 \\h}{\fldrslt }}\tab {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window} 
\par {\field\flddirty{\*\fldinst SYMBOL 183 \\f "Symbol" \\s 10 \\h}{\fldrslt }}\tab {\b\uldb\cf11 consultation window}{\v\cf5 consultation_window} 
\par \pard \sb120 Each of them allows executing its own set of actions under the corresponding part of the knowledge base. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} structure_window }} Structure Window 
\par \pard\plain \sb120 \f2\fs20\lang1033 The structure window is used to edit the syntactical structure of the problem domain. In this window one may add, delete, and edit descriptions of attributes and values which make up the {\b\uldb\cf11 attribute model}{
\v\cf5 attribute_model}. Both attributes and the values may be sorted in the order of different properties of their descriptions, e.g., by importance or by name. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} knowledge_window }} Knowledge Window 
\par \pard\plain \sb120 \f2\fs20\lang1033 The knowledge window is used to edit the semantical part of the knowledge base. At each moment it displays the only rule ({\b\uldb\cf11 fuzzy disjunct}{\v\cf5 fuzzy_disjuncts} or {\b\uldb\cf11 conjunct}{\v\cf5 
fuzzy_conjuncts}) from the knowledge base. The rules may be added, deleted, or edited. The rules are edited by adding or deleting {\b\uldb\cf11 propositions}{\v\cf5 fuzzy_propositions}
 about attributes and this results in the corresponding change of the structure of logical dependency. In addition one may edit the propositions by changing the components within each of propositions which make up the rule. Components are increased by the
 key GrayPlus and decreased by the key GrayMinus. 
\par \pard \sb120 The propositions may be either in premise form or in the conclusion form. Premises are indicated by the symbol {\field{\*\fldinst IMPORT C:\\\\EDIP\\\\KM\\\\HELP\\\\KNATTIN.BMP \\* mergeformat}{\fldrslt {{\pict\wmetafile8\picw305\pich353
\picwgoal173\pichgoal200 
0100090000038e00000000006a0000000000050000000b0200000000050000000c020a000a0005000000090200000000050000000102ffffff0004000000070103006a000000430f2000cc0000000a000a00000000000a000a0000000000280000000a0000000a000000010004000000000050000000000000000000000000
000000100000000000000000008000008000000080800080000000800080008080000080808000404040000000ff0000ff000000ffff00ff000000ff00ff00ffff0000ffffff00ffffffffcc1000b0ffffffccac044444ffffccaaac000011ffccaaaaac000000ccaaaaaaac000000ffccaaaaac000000ffffccaaac000000
ffffffccac000000ffffffffcc000000ffffffffff000000030000000000}}}} (left arrow directed from the name of the attribute). Conclusions are indicated by the symbol {\field{\*\fldinst IMPORT C:\\\\EDIP\\\\KM\\\\HELP\\\\KNATTOUT.BMP \\* mergeformat}{\fldrslt {
{\pict\wmetafile8\picw305\pich353\picwgoal173\pichgoal200 
0100090000038e00000000006a0000000000050000000b0200000000050000000c020a000a0005000000090200000000050000000102ffffff0004000000070103006a000000430f2000cc0000000a000a00000000000a000a0000000000280000000a0000000a000000010004000000000050000000000000000000000000
000000100000000000000000008000008000000080800080000000800080008080000080808000404040000000ff0000ff000000ffff00ff000000ff00ff00ffff0000ffffff00ccffffffff1000b0caccffffff044444caaaccffff000011caaaaaccff000000caaaaaaacc000000caaaaaccff000000caaaccffff000000
caccffffff000000ccffffffff000000ffffffffff000000030000000000}}}} (right arrow directed to the name of the attribute). 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} consultation_window }} Consultation Window 
\par \pard\plain \sb120 \f2\fs20\lang1033 
The consultation window is used for carrying out consultations and has two views: data view and conclusion view. In data view observable information is entered into the window while the goal of consultation is entered in conclusion view. 
\par \pard \sb120 In order to enter data about the concrete situation in the system it is necessary to insert the proposition about some attribute into the data window (just as in the {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window}
) after that to set properly components of this {\b\uldb\cf11 proposition}{\v\cf5 fuzzy_propositions} by the keys GrayPlus and GrayMinus. 
\par \pard \sb120 The conclusion view is identical to the data view except that its components are set by inference engine. Nevertheless the user may add or delete propositions in the conclusion view in order to set the goal of consultation. 
\par \pard \sb120 The consultati
on in knowledge manager EDIP consists in entering the data with the following carrying out logical inference. The system does not put pressure on the user; the user is free in his or her actions. One may experiment, play with the logical model of the prob
lem domain just as if it was the real one. So it is possible to enter information about the goal as input data (e.g., diagnosis) and then ask the system to derive all consequences. For example, it is possible to enter the car description (number of doors,
 base etc.) with the purpose of finding out its type, but it is also possible to specify the type of car with the purpose of finding out its characteristic properties. In this sense all attributes in the knowledge manager EDIP are equal. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} menu_commands }} Menu Commands 
\par \pard\plain \sb120 \f2\fs20\lang1033 Each class of windows ({\b\uldb\cf11 structure}{\v\cf5 structure_window}, {\b\uldb\cf11 knowledge}{\v\cf5 knowledge_window} and {\b\uldb\cf11 consultation}{\v\cf5 consultation_window}
) has its own set of actions which may be fulfilled through the corresponding menu. However there is the following common part in all menus: 
\par \tab {\b\uldb\cf11 File}{\v\cf5 file_menu} 
\par \tab {\b\uldb\cf11 View}{\v\cf5 view_menu} 
\par \tab {\b\uldb\cf11 Item}{\v\cf5 item_menu} 
\par \tab {\b\uldb\cf11 Window}{\v\cf5 window_menu} 
\par \tab {\b\uldb\cf11 Help}{\v\cf5 help_menu}
\par \pard \sb120 In addition the knowledge window has menu item 
\par \pard \sb120 \tab {\b\uldb\cf11 Compile}{\v\cf5 compile_menu} 
\par \pard \sb120 and the consultation window has menu item 
\par \pard \sb120 \tab {\b\uldb\cf11 Inference}{\v\cf5 inference_menu} 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_menu }} File Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 The File menu, along with the {\b\uldb\cf11 Help}{\v\cf5 help_menu}
 menu, is displayed when you first open knowledge manager EDIP. You use this menu to create. open, close, and save knowledge bases; close files; and exit knowledge manager. 
\par \pard \sb120 Here are the File menu  commands: 
\par \pard \sb120 \tab {\b\uldb\cf11 New}{\v\cf5 file_new_}{\v\cf5 menu} 
\par \tab {\b\uldb\cf11 Open}{\v\cf5 file_open_menu} 
\par \tab {\b\uldb\cf11 Exit}{\v\cf5 file_exit_menu} 
\par \pard \sb120 Once you have created or opened a knowledge base, several more File commands are available: 
\par \pard \sb120 \tab {\b\uldb\cf11 Save}{\v\cf5 file_save_menu} 
\par \tab {\b\uldb\cf11 Save As}{\v\cf5 file_saveas_menu} 
\par \tab {\b\uldb\cf11 Close}{\v\cf5 file_close_menu} 
\par \tab {\b\uldb\cf11 Close All}{\v\cf5 file_closeall_menu} 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_new_menu }} File|New Knowledge Base 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|New knowledge base command creates new untitled knowledge base and opens {\b\uldb\cf11 structure window}{\v\cf5 structure_window}
 for it. In this window you can develop the syntactical structure for the problem domain and then (after the knowledge base is saved) to open the {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window}
 where the semantical dependencies between attributes have to be entered. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_open_menu }} File|Open Knowledge Base 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|Open knowledge base command opens an existing knowledge base. This command brings up the Open Knowledge Base dialog box where you select the file and class of the window to open ({\b\uldb\cf11 structure}{\v\cf5 
structure_window}, {\b\uldb\cf11 knowledge}{\v\cf5 knowledge_window} or {\b\uldb\cf11 consultation}{\v\cf5 consultation_window} window). 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_save_menu }} File|Save Knowledge Base 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|Save knowledge base command saves 
all parts of your knowledge base independently of the current window class. If you are saving a new knowledge base that has not been named yet, the knowledge manager EDIP displays the Save Knowledge Base As dialog box where you specify the file name and d
irectory. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_saveas_menu }} File|Save Knowledge Base As 
\par \pard\plain \sb120 \f2\fs20\lang1033 Use the File|Save Knowledge Base As command if you want to rename the current knowledge base. The knowledge manager EDIP brings up the Save Knowledge Base As dialog box, where you specify the file's new name and 
directory. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_close_menu }} File|Close Window 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|Close command closes an open window. If you have made changes and have not saved them, the knowledge manager EDIP asks you if you want to save changes. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_closeall_menu }} File|Close All Windows 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|Close All command closes all open files. If you have made changes and have not saved them, the knowledge manager EDIP asks you if you want to save the changes. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} file_exit_menu }} File|Exit 
\par \pard\plain \sb120 \f2\fs20\lang1033 File|Exit command exits you from the knowledge manager EDIP and closes all files. If you have made changes and have not saved them, the knowledge manager EDIP asks you if you want to save the changes. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} view_menu }} View Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 
View menu allows one to change an appearance of the current window. Use this command to determine how the window displays information. With the help of two commands Split Horizontal and Split Vertical the window can be {\b\uldb\cf11 splited}{\v\cf5 
view_spliting_menu} as needed. Items within the window (attributes and values) may be {\b\uldb\cf11 sorted}{\v\cf5 view_sorting_menu} in the order of different properties: Unsorted, by Structure (only
 for knowledge and consultation windows), by Price, by Importance, by Values Number (only for attributes), by Characterness (only for values). 
\par For the consultation window there are also two additional commands: {\b\uldb\cf11 Data and Conclusion}{\v\cf5 view_dataconc_menu}. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} view_spliting_menu }} Splitting Window 
\par \pard\plain \sb120 \f2\fs20\lang1033 
Each of open windows may be splited horizontally, vertically, or may have not splitting at all. If the window is splited, then attributes are displayed in the upper (for horizontal splitting) or left (for vertical splitting) subwindow, 
while the values are displayed in the other subwindow. No splitting means that both attributes and the values are displayed in the only window. If the window is splited, then the divider may be moved by the mouse. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} view_sorting_menu }} Sorting Items 
\par \pard\plain \sb120 \f2\fs20\lang1033 
Use the commands of sorting to group items in the window (attributes and values) according to different properties. Items may be Unsorted, sorted by Structure (only for the knowledge and consultation windows), by Name, by Price, by Importance, by Values N
umber (only for attributes), by Characterness (only for values). Option Unsorted means that the items are displayed in the order they were added. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} view_dataconc_menu }} Data/Conclusion View 
\par \pard\plain \sb120 \f2\fs20\lang1033 There are two commands in view menu which are displayed only for {\b\uldb\cf11 consultation window}{\v\cf5 consultation_window}
: Data and Conclusion. These commands let you see either data entered by the user during the consultation or conclusions which are obtained from the data as a result of {\b\uldb\cf11 logical inference}{\v\cf5 logical_inference}. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} item_menu }} Item Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 There are three main item commands: Add, Delete, Edit. In the {\b\uldb\cf11 structure window}{\v\cf5 structure_window}
 they are used to add, delete or edit items respectively. The item may be either attribute or value depending on the current item. If new item is added, then it is inserted just before the current item. 
\par In the knowledge and consultation windows the items are propositions, i.e., commands Add, Delete and Invert are used to add, delete or invert propositions in the current rule (for the {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window}) or in the {
\b\uldb\cf11 data/conclusion}{\v\cf5 view_}{\v\cf5 dataconc_menu} (for the {\b\uldb\cf11 consultation window}{\v\cf5 consultation_window}). 
\par \pard \sb120 In the knowledge window there are two additional commands Add Rule and Delete Rule, which are used to insert new empty rule just before the current and to delete the current rule. 
\par The Call Hypertext command calls WinHelp program for the current item (attribute or value) using the value of the Hypertext field in the item description. The name of the hyperfile is taken from the module description. 
\par \pard \sb120 The Module Header command is used to edit the current knowledge base description. It calls Module Header dialog box. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} compile_menu }} Compile Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 Before the knowledge base may be used in consultation it has to be compiled with the help of the Compile command of the {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window}
. The goal of compilation is consists in transforming the knowledge base into a new form in which the {\b\uldb\cf11 logical inference}{\v\cf5 logical_inference}
 is much more simpler. Having compiled the knowledge base you may carry out logical inference (in the {\b\uldb\cf11 consultation window}{\v\cf5 consultat}{\v\cf5 ion_window}) on the data and obtain conclusions. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} inference_menu }} Inference Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 The Inference command is used to carry out {\b\uldb\cf11 logical inference}{\v\cf5 logical_inference}
. Before carrying out logical inference the goal have to be set by inserting some attribute (or several attributes) into the {\b\uldb\cf11 consultation window}{\v\cf5 consultation_window} in {\b\uldb\cf11 conclusion view}{\v\cf5 view_dataconc_menu}
. The data are entered in {\b\uldb\cf11 data view}{\v\cf5 view_dataconc_menu} and they are thought of as fuzzy constraints on the values of attributes. Logical inference on the data in know
ledge manager EDIP consists in finding maximal fuzzy constraints on the values of goal attributes. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} window_menu }} Window Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 The window menu contains commands for  manipulating and opening windows. At the bottom of the Window menu is a list of open windows ({\b\uldb\cf11 window class}{\v\cf5 window_classes}
 and the knowledge base file name). If there is more than one, you can switch to another window and make it active by selecting it from the list. These are the Window menu commands: Tile, Cascade, Arrange Icons. 
\par \pard \sb120 Choose Window|Tile to tile your open windows. This option arranges the windows so they cover the entire desktop without overlapping one another. 
\par \pard \sb120 Choose Window|Cascade to stack all open windows. This option overlaps open windows so each is the same size as all others and only part of each underlying window is visible. 
\par \pard \sb120 Choose Window|Arrange Icons to arrange all icons in your main window. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} help_menu }} Help Menu 
\par \pard\plain \sb120 \f2\fs20\lang1033 The Help menu provides access to online help, which comes up in a special Help window. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} attribute_model }} Attribute Model 
\par \pard\plain \sb120 \f2\fs20\lang1033 It is suppose
d that the problem domain is described with the help of a finite number of attributes, each of them taking a finite number of values. The Cartesian product of all sets of the values is called the universe or the states space. Attributes and the values for
m a syntactical structure of the problem domain. Note that there is no fuzziness at the syntactical level of the description. So if there is the attribute COLOR with the values Black and White, then in such model information about the red or gray color ca
nnot be principally expressed. The representation with the help of attribute model means that each state of the problem domain has its description in the form of the concrete collection of the values of attributes. 
\par \pard \sb120 
Semantics of the problem domain is fuzzy constraints on the possible combinations of the values of attributes. We will suppose that it is represented by the possibility distribution on the states space. In other words, in order to represent the semantics 
it is necessary to assign each object (sta
te) a number form [0,1] called the degree of possibility. If the degree of possibility is equal to 1, then it means total uncertainty, whereas 0 means that the state is disabled and consequently the corresponding combination of the values of attributes is
 meaningless. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} fuzzy_propositions }} Fuzzy Propositions 
\par \pard\plain \sb120 \f2\fs20\lang1033 Elementary fuzzy proposition is fuzzy constraints on the possible values of one attribute. Here is an example of the elementary fuzzy proposition: COLOR= \{Black:1, Gray:0.5, White:0\}
. Thus elementary fuzzy proposition assigns each value a number from [0,1] which is thought of as degree of possibility. 
\par \pard \sb120 More complex propositions are built from elementary ones with the help of logical connectives AND and OR. In the knowledge manager EDIP the following complex propositions are used: {\b\uldb\cf11 disjuncts}{\v\cf5 fuzzy_disjuncts}, {
\b\uldb\cf11 implications}{\v\cf5 fuzzy_implications}, {\b\uldb\cf11 conjuncts}{\v\cf5 fuzzy_conjuncts}. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} fuzzy_disjuncts }} Fuzzy Disjuncts 
\par \pard\plain \sb120 \f2\fs20\lang1033 Fuzzy disjunct consists of a number of elementary fuzzy {\b\uldb\cf11 propositions}{\v\cf5 fuzzy_propositions} connected by OR connective. The semantics of disj
unct has a prohibitive character, i.e., one disjunct disables (in fuzzy sense) some states of the problem domain or some combinations of the values of attributes. 
\par In the knowledge manager EDIP fuzzy disjuncts are used to express general knowledge about the problem domain and they are displayed in the {\b\uldb\cf11 knowledge window}{\v\cf5 knowledge_window}. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} fuzzy_implications }} Fuzzy Implications 
\par \pard\plain \sb120 \f2\fs20\lang1033 Fuzzy implication consists of the left and right parts connected by the implication sign. Elementary {\b\uldb\cf11 propositions}{\v\cf5 fuzzy_propositions} in the left part
 are connected by AND connective, while elementary propositions in the right part are connected by OR connective. 
\par Each implication is semantically equivalent to some {\b\uldb\cf11 fuzzy disjunct}{\v\cf5 fuzzy_disjuncts}, which can be obtained by inverting the left part of the implication. However implications are more convenient for expressing casual dependencies. 

\par \pard \sb120 In the knowledge manager EDIP propositions from the left part of implication (premises) are indicated by the symbol {\field{\*\fldinst IMPORT C:\\\\EDIP\\\\KM\\\\HELP\\\\KNATTIN.BMP \\* mergeformat}{\fldrslt {{\pict\wmetafile8\picw305\pich353
\picwgoal173\pichgoal200 
0100090000038e00000000006a0000000000050000000b0200000000050000000c020a000a0005000000090200000000050000000102ffffff0004000000070103006a000000430f2000cc0000000a000a00000000000a000a0000000000280000000a0000000a000000010004000000000050000000000000000000000000
000000100000000000000000008000008000000080800080000000800080008080000080808000404040000000ff0000ff000000ffff00ff000000ff00ff00ffff0000ffffff00ffffffffcc1000b0ffffffccac044444ffffccaaac000011ffccaaaaac000000ccaaaaaaac000000ffccaaaaac000000ffffccaaac000000
ffffffccac000000ffffffffcc000000ffffffffff000000030000000000}}}} (left arrow directed from the name of the attribute), while propositions from the right part (conclusions) are indicated by the symbol {\field{\*\fldinst IMPORT C:\\\\EDIP\\\\KM\\\\HELP\\\\
KNATTOUT.BMP \\* mergeformat}{\fldrslt {{\pict\wmetafile8\picw305\pich353\picwgoal173\pichgoal200 
0100090000038e00000000006a0000000000050000000b0200000000050000000c020a000a0005000000090200000000050000000102ffffff0004000000070103006a000000430f2000cc0000000a000a00000000000a000a0000000000280000000a0000000a000000010004000000000050000000000000000000000000
000000100000000000000000008000008000000080800080000000800080008080000080808000404040000000ff0000ff000000ffff00ff000000ff00ff00ffff0000ffffff00ccffffffff1000b0caccffffff044444caaaccffff000011caaaaaccff000000caaaaaaacc000000caaaaaccff000000caaaccffff000000
caccffffff000000ccffffffff000000ffffffffff000000030000000000}}}} (right arrow directed to the name of the attribute). 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} fuzzy_conjuncts }} Fuzzy Conjuncts 
\par \pard\plain \sb120 \f2\fs20\lang1033 Fuzzy conjunct consists of a number of elementary fuzzy {\b\uldb\cf11 propositions}{\v\cf5 fuzzy_propositions}
 connected by AND connective. Fuzzy conjuncts are used to store data and conclusions during the consultation and are displayed in the {\b\uldb\cf11 consultation }{\b\uldb\cf11 window}{\v\cf5 consultation_window}. 
\par \pard\plain \s254\sb240\sa240\box\brdrsh\brdrs\brdrw15\brsp20 \b\f2\fs36\cf2\lang1033 \page {\plain \f2\fs16\up6\lang1033 #{\footnote \pard\plain \s245\sb120 \f2\fs20\lang1033 {\fs16\up6 #} logical_inference }} Logical Inference 
\par \pard\plain \sb120 \f2\fs20\lang1033 
Logical inference in the knowledge manager EDIP consists in finding maximal fuzzy constraints on the values of separate attributes provided data about the current situation and general knowledge. Information about the concrete situation is entered into th
e {\b\uldb\cf11 consulataion window}{\v\cf5 consultation_window} in data view and is kept as one {\b\uldb\cf11 fuzzy conjunct}{\v\cf5 fuzzy_conjuncts}. Obtained as a result of logical inference information is displayed in conclusion view of the consulta
tion window and is also kept as one fuzzy conjunct. 
\par }